{"version":3,"sources":["utils/api.js","components/Header.js","images/notFound.png","components/Card.js","components/Main.js","components/Footer.js","components/ModalWithInfo.js","components/LoadingSpinner.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","authorization","this","_baseUrl","_authorization","res","ok","json","Promise","reject","status","title","fetch","then","_checkStatus","id","Header","className","Card","props","src","movie","Poster","imageNotFoundPath","alt","Title","onClick","openInfo","imdbID","Main","movies","onSubmit","showError","React","useState","movieValue","setMovieValue","useEffect","e","preventDefault","name","value","onChange","target","placeholder","minLength","maxLength","required","autoFocus","type","map","item","Footer","Date","getFullYear","ModalWithInfo","onClose","isOpen","data","Director","Actors","Plot","LoadingSpinner","isLoading","App","moviesList","setMoviesList","currentMovie","setCurrentMovie","isInfoModalOpen","setIsInfoModalOpen","isErrorShow","setIsErrorShow","setIsLoading","getMovies","Response","Search","catch","err","console","log","getMoviesbyId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fbc2ea4.chunk.js","sourcesContent":["import './api.css';\r\n\r\n//Класс содержит всю логику для работы с API\r\nclass Api {\r\n  constructor(baseUrl, authorization) {\r\n    this._baseUrl = baseUrl;\r\n    this._authorization = authorization;\r\n  }\r\n\r\n  //проверка состояния промиса, чтобы не писать одно и то же сто тыщ раз\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  //получение информации о фильмах с сервера\r\n  getMovies(title) {\r\n    return fetch(`${this._baseUrl}?s=${title}&apikey=${this._authorization}`)\r\n    .then(res => this._checkStatus(res));\r\n  }\r\n\r\n  //получение информации о фильмах с сервера с расширенной инфой\r\n  getMoviesbyId(id) {\r\n    return fetch(`${this._baseUrl}?i=${id}&apikey=${this._authorization}&plot=full`)\r\n    .then(res => this._checkStatus(res));\r\n  }\r\n\r\n\r\n};\r\n\r\nconst api = new Api(\"https://www.omdbapi.com/\", \"5cd3eeda\");\r\nexport default api;","//ФК, отвечающий за заголовок\nimport React from 'react';\n\nfunction Header() {\n  return (\n    <>\n      <h1 className=\"header__title\">Movie Search Engine</h1>\n      <p className=\"header__subtitle\">Search for your favourite movies by title</p>\n    </>\n  )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/notFound.0d61eb5c.png\";","//ФК, возвращающий разметку карточки с фильмом\nimport React from 'react';\nimport imageNotFoundPath from \"../images/notFound.png\"\n\nfunction Card(props) {\n\n  function getMovieData() {\n    props.openInfo(props.movie.imdbID);\n  }\n\n  return (\n    <li key={props.movie.imdbID} className=\"card\" >\n      <img src={props.movie.Poster === \"N/A\" ? imageNotFoundPath : props.movie.Poster} alt={props.movie.Title} className=\"card__photo\" />\n      <h2 className=\"card__name\" id=\"cardName\">{props.movie.Title}</h2>\n      <button className=\"card__info\" onClick={getMovieData}>Learn more</button>\n    </li>\n  )\n}\n\nexport default Card;","//ФК, отвечающий за рендер карточек с фильмами, и возвращающий разметку поисковой строки и карточек\nimport React from 'react';\nimport Card from './Card';\n\nfunction Main({movies, onSubmit, openInfo, showError}) {\n\n  //хук для хранения и изменения значения инпута с названием фильма\n  const [movieValue, setMovieValue] = React.useState(\"\");\n\n  function handleMovieChange(e) {\n    setMovieValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(movieValue);\n  }\n\n  React.useEffect(() => {\n    setMovieValue(\"\")\n  }, [onSubmit])\n\n  return (\n    <main className=\"main\">\n      <form className=\"main__form\" onSubmit={handleSubmit}>\n        <input name=\"movieTitle\" className=\"main__search-input\" value={movieValue} onChange={handleMovieChange} placeholder=\"Search for movies\" minLength=\"2\" maxLength=\"30\" required autoFocus></input>\n        <button name=\"submitButton\" className=\"main__search-button\" type=\"submit\">Search</button>\n      </form>\n      <p className={`main__error ${showError ? 'main__error_active' : \"\" }`}>No such movies found...</p>\n        <ul className=\"main__grid\">\n          {movies.map(item => {\n            return (\n               <Card movie={item} key={item.imdbID} openInfo={openInfo} />)\n              }\n            )\n          }\n        </ul>\n    </main>\n  )\n}\n\nexport default Main;\n\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <p className=\"footer__author\">&#169; {new Date().getFullYear()} MSE by Mikhail Kirichkov</p>\r\n      <p className=\"footer__gratitude\">Created with OMDb API</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","//ФК, отвечающий за рендер модалки с расширенной инфой\n\nimport React from 'react';\n\nfunction ModalWithInfo(props) {\n\n  return (\n    <div onClick={props.onClose} className={`info__wrapper ${props.isOpen ? 'info__wrapper_active' : \"\" }`}>\n      <div className=\"info\">\n        <div className=\"info__text-section\">\n          <h2 className=\"info__caption\">Director:</h2>\n          <p name=\"infoDirector\" className=\"info__text\">{props.data.Director}</p>\n          <h2 className=\"info__caption\">Actors:</h2>\n          <p name=\"infoActors\" className=\"info__text\">{props.data.Actors}</p>\n          <h2  className=\"info__caption\">Description:</h2>\n          <p name=\"infoAbout\" className=\"info__text info__about\">{props.data.Plot}</p>\n        </div>\n      <img className=\"info__poster\" src={props.data.Poster} alt={props.data.Title}/>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalWithInfo;","//ФК, отвечающий за спиннер загрузки\nimport React from 'react';\n\nfunction LoadingSpinner({isLoading}) {\n\n  return (\n    <div className={`spinner__wrapper ${isLoading ? \"spinner__wrapper_active\" : \"\" }`}>\n      <div className=\"spinner\"></div>\n    </div>\n  )\n}\n\nexport default LoadingSpinner;","import React from 'react';\nimport './App.css';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ModalWithInfo from './ModalWithInfo';\nimport LoadingSpinner from './LoadingSpinner';\n\nfunction App() {\n  //Хук, отвечающий за список фильмов\n  const [moviesList, setMoviesList] = React.useState([]);\n  //Хук, отвечающий за конкретный фильм, инфа о котором пойдет в модалку\n  const [currentMovie, setCurrentMovie] = React.useState({});\n  //Хук, отвечающий за открытие модалки с инфой\n  const [isInfoModalOpen, setIsInfoModalOpen] = React.useState(false);\n  //Хук, отвечающий за показ ошибки, если по запросу ничего не найдено\n  const [isErrorShow, setIsErrorShow] = React.useState(false);\n  //Хук, отвечающий за спиннер с загрузкой\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  //Функция отвечает за отправку данных из инпута с названием фильма\n  function handleSearch(title) {\n    setIsLoading(true);\n    api.getMovies(title)\n    .then(res => {\n      if (res.Response === \"True\") {\n        setMoviesList(res.Search);\n        setIsErrorShow(false);\n        setIsLoading(false);\n      }\n      else {\n        setMoviesList([]);\n        setIsErrorShow(true);\n        setIsLoading(false);\n      }\n    })\n    .catch(err => console.log(err));\n  }\n\n  //Функция делает запрос к АПИ по айди фильма, чтобы получить пул с расширенной инфой\n  function handleChoseMovie(id) {\n    api.getMoviesbyId(id)\n    .then(res => {\n      setCurrentMovie(res);\n      setIsInfoModalOpen(true);\n    })\n    .catch(err => console.log(err));\n  }\n\n  //Закрытие модалки с инфой\n  function handleCloseModal() {\n    setIsInfoModalOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Main\n        onSubmit={handleSearch}\n        movies={moviesList}\n        openInfo={handleChoseMovie}\n        showError={isErrorShow}\n      />\n\n      <LoadingSpinner\n        isLoading={isLoading}\n      />\n\n      <ModalWithInfo\n        data={currentMovie}\n        isOpen={isInfoModalOpen}\n        onClose={handleCloseModal}\n      />\n\n      <Footer />\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}