{"version":3,"sources":["utils/api.js","components/Header.js","images/notFound.png","components/Card.js","components/Main.js","components/Footer.js","components/ModalWithInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","authorization","this","_baseUrl","_authorization","res","ok","json","Promise","reject","status","title","fetch","then","_checkStatus","id","Header","className","Card","props","src","movie","Poster","imageNotFoundPath","alt","Title","onClick","openInfo","imdbID","Main","movies","onSubmit","showError","React","useState","movieValue","setMovieValue","useEffect","e","preventDefault","name","value","onChange","target","placeholder","minLength","maxLength","required","autoFocus","type","map","item","Footer","Date","getFullYear","ModalWithInfo","isOpen","onClose","data","Director","Actors","Plot","App","moviesList","setMoviesList","currentMovie","setCurrentMovie","isInfoModalOpen","setIsInfoModalOpen","isErrorShow","setIsErrorShow","getMovies","Response","Search","catch","err","console","log","getMoviesbyId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.404f9c4f.chunk.js","sourcesContent":["import './api.css';\r\n\r\n//Класс содержит всю логику для работы с API\r\nclass Api {\r\n  constructor(baseUrl, authorization) {\r\n    this._baseUrl = baseUrl;\r\n    this._authorization = authorization;\r\n  }\r\n\r\n  //проверка состояния промиса, чтобы не писать одно и то же сто тыщ раз\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  //получение информации о фильмах с сервера\r\n  getMovies(title) {\r\n    return fetch(`${this._baseUrl}?s=${title}&apikey=${this._authorization}`)\r\n    .then(res => this._checkStatus(res));\r\n  }\r\n\r\n  //получение информации о фильмах с сервера с расширенной инфой\r\n  getMoviesbyId(id) {\r\n    return fetch(`${this._baseUrl}?i=${id}&apikey=${this._authorization}&plot=full`)\r\n    .then(res => this._checkStatus(res));\r\n  }\r\n\r\n\r\n};\r\n\r\nconst api = new Api(\"https://www.omdbapi.com/\", \"5cd3eeda\");\r\nexport default api;","import React from 'react';\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <h1 className=\"header__title\">Movie Search Engine</h1>\r\n      <p className=\"header__subtitle\">Search for your favourite movies by title</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/notFound.0d61eb5c.png\";","import React from 'react';\r\nimport imageNotFoundPath from \"../images/notFound.png\"\r\n\r\nfunction Card(props) {\r\n\r\n  function getMovieData() {\r\n    props.openInfo(props.movie.imdbID)\r\n  }\r\n\r\n\r\n  return (\r\n    <li key={props.movie.imdbID} className=\"card\" >\r\n      <img src={props.movie.Poster === \"N/A\" ? imageNotFoundPath : props.movie.Poster} alt={props.movie.Title} className=\"card__photo\" />\r\n      <h2 className=\"card__name\" id=\"cardName\">{props.movie.Title}</h2>\r\n      <button className=\"card__info\" onClick={getMovieData}>Learn more</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction Main({movies, onSubmit, openInfo, showError}) {\r\n\r\n  //хук для хранения и изменения значения инпута с названием фильма\r\n  const [movieValue, setMovieValue] = React.useState(\"\");\r\n\r\n  function handleMovieChange(e) {\r\n    setMovieValue(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSubmit(movieValue)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setMovieValue(\"\")\r\n  }, [onSubmit])\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <form className=\"main__form\" onSubmit={handleSubmit}>\r\n        <input name=\"movieTitle\" className=\"main__search-input\" value={movieValue} onChange={handleMovieChange} placeholder=\"Search for movies\" minLength=\"2\" maxLength=\"30\" required autoFocus></input>\r\n        <button name=\"submitButton\" className=\"main__search-button\" type=\"submit\">Search</button>\r\n      </form>\r\n      <p className={`main__error ${showError ? 'main__error_active' : \"\" }`}>No such movies found...</p>\r\n        <ul className=\"main__grid\">\r\n          {movies.map(item => {\r\n            return (\r\n               <Card movie={item} key={item.imdbID} openInfo={openInfo} />)\r\n              }\r\n            )\r\n          }\r\n        </ul>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <p className=\"footer__author\">&#169; {new Date().getFullYear()} MSE by Mikhail Kirichkov</p>\r\n      <p className=\"footer__gratitude\">Created with OMDb API</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nfunction ModalWithInfo(props) {\r\n\r\n\r\n  return (\r\n    <div className= {`info__wrapper ${props.isOpen ? 'info__wrapper_active' : \"\" }`}>\r\n      <button name=\"closeButton\" className=\"info__close-btn\" type=\"button\" onClick={props.onClose}></button>\r\n      <div className=\"info\">\r\n        <h2 className=\"info__caption\">Director:</h2>\r\n        <p name=\"infoDirector\" className=\"info__text\">{props.data.Director}</p>\r\n        <h2 className=\"info__caption\">Actors:</h2>\r\n        <p name=\"infoActors\" className=\"info__text\">{props.data.Actors}</p>\r\n        <h2  className=\"info__caption\">Description:</h2>\r\n        <p name=\"infoAbout\" className=\"info__text\">{props.data.Plot}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalWithInfo;","import React from 'react';\r\nimport './App.css';\r\nimport api from '../utils/api';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ModalWithInfo from './ModalWithInfo';\r\n\r\nfunction App() {\r\n  const [moviesList, setMoviesList] = React.useState([]);\r\n  const [currentMovie, setCurrentMovie] = React.useState({});\r\n  const [isInfoModalOpen, setIsInfoModalOpen] = React.useState(false);\r\n  const [isErrorShow, setIsErrorShow] = React.useState(false);\r\n\r\n  function handleSearch(title) {\r\n    api.getMovies(title)\r\n    .then(res => {\r\n      if (res.Response === \"True\") {\r\n        setMoviesList(res.Search)\r\n        setIsErrorShow(false)\r\n      }\r\n      else {\r\n        setMoviesList([])\r\n        setIsErrorShow(true)\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  function handleChoseMovie(id) {\r\n    api.getMoviesbyId(id)\r\n    .then(res => {\r\n      setCurrentMovie(res)\r\n      setIsInfoModalOpen(true)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setIsInfoModalOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n\r\n      <Main\r\n        onSubmit={handleSearch}\r\n        movies={moviesList}\r\n        openInfo={handleChoseMovie}\r\n        showError={isErrorShow}\r\n      />\r\n\r\n      <ModalWithInfo\r\n        data={currentMovie}\r\n        isOpen={isInfoModalOpen}\r\n        onClose={handleCloseModal}\r\n      />\r\n\r\n\r\n      <Footer />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}